version: "3.8"

services:
    
    ATLAS_Orchestrator:
        image: yaoyingsmu/atlas_orchestrator:latest
        build: 
            context: .
            dockerfile: dockerfiles/ATLAS_Orchestrator.Dockerfile
        restart: always
        container_name: ATLAS_Orchestrator
        ports:
            - "5000:5000"
    
    WDC:
        image: yaoyingsmu/atlas_webdataconnector:latest
        build: 
            context: .
            dockerfile: dockerfiles/WDC.Dockerfile
        restart: always
        container_name: ATLAS_WebDataConnector
        ports:
            - "80:8888"
        depends_on:
            - ATLAS_Orchestrator

    portfolioDisplay:
        image: yaoyingsmu/atlas_service_portfoliodisplay:latest
        build:
            context: .
            dockerfile: dockerfiles/portfolioDisplay.Dockerfile
        restart: always
        container_name: ATLAS_service_portfolioDisplay
        ports:
            - "5001:5001"
        depends_on:
            - ATLAS_Orchestrator

    autoARIMA:
        image: yaoyingsmu/atlas_service_autoarima:latest
        build:
            context: .
            dockerfile: dockerfiles/autoARIMA.Dockerfile
        restart: always
        container_name: ATLAS_service_autoARIMA
        ports:
            - "5002:5002"
        depends_on:
            - ATLAS_Orchestrator

    companyInfo:
        image: yaoyingsmu/atlas_service_companyinfo:latest
        build:
            context: .
            dockerfile: dockerfiles/companyInfo.Dockerfile
        restart: always
        container_name: ATLAS_service_companyInfo
        ports:
            - "5003:5003"
        depends_on:
            - ATLAS_Orchestrator

    financialStatements:
        image: yaoyingsmu/atlas_service_financialstatements:latest
        build:
            context: .
            dockerfile: dockerfiles/financialStatements.Dockerfile
        restart: always
        container_name: ATLAS_service_financialStatements
        ports:
            - "5004:5004"
        depends_on:
            - ATLAS_Orchestrator

    markowitzPortfolioTheory:
        image: yaoyingsmu/atlas_service_markowitzportfoliotheory:latest
        build:
            context: .
            dockerfile: dockerfiles/markowitzPortfolioTheory.Dockerfile
        restart: always
        container_name: ATLAS_service_markowitzPortfolioTheory
        ports:
            - "5005:5005"
        depends_on:
            - ATLAS_Orchestrator

    redis:
        image: redis:alpine
        restart: always
        volumes:
            - redis_data:/data
        container_name: ATLAS_price_cache
        ports:
            - "6379:6379"

volumes:
    redis_data: